<?php

/**
 * @file
 * Hooks implementations for EzContent Node module.
 */

use Drupal\ezcontent_node\Element\Date;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\node\NodeInterface;

/**
 * Implements hook_entity_view_alter().
 */
function ezcontent_node_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  // Check if entity is a non-new node in either full or AMP view mode.
  /** @var \Drupal\node\NodeInterface $entity */
  if ($entity instanceof NodeInterface && $entity->bundle() === 'landing_page' && !$entity->isNew() && $build['#view_mode'] == 'amp') {
    // Get a list of available view modes for the current entity.
    $view_modes = \Drupal::service('entity_display.repository')
      ->getViewModeOptionsByBundle('node', 'landing_page');
    // Double-check that the AMP view mode is enabled for this node type.
    if (isset($view_modes['amp'])) {
      foreach ($build['#node']->layout_builder__layout->getValue() as $key => $value) {
        foreach ($value['section']->getComponents() as $component) {
          $configuration = [];
          $configuration = $component->get('configuration');
          $configuration['view_mode'] = 'amp';
          $component->setConfiguration($configuration);
        }
        $build['_layout_builder'][$key] = $value['section']->toRenderArray();
      }
    }
  }
}

/**
 * Implements hook_element_info_alter().
 */
function ezcontent_node_element_info_alter(array &$info) {
  $info['date']['#process'][] = [Date::class, 'processDate'];
}


/**
 * @file
 * Contains ezcontent_article hook implementations.
 */

/**
 * Implements hook_modules_installed().
 */
function ezcontent_node_modules_installed($modules) {
  $config = \Drupal::service('config.factory')
    ->getEditable('metatag.metatag_defaults.node__article');
  if (in_array('metatag_twitter_cards', $modules)) {
    $config->set('tags.twitter_cards_image', '[node:field_thumbnail:entity:url]');
    $config->set('tags.twitter_cards_page_url', '[node:url]');
    $config->set('tags.twitter_cards_description', '[node:field_summary]');
    $config->set('tags.twitter_cards_type', 'summary');
    $config->set('tags.twitter_cards_title', '[node:title]');
  }
  elseif (in_array('metatag_open_graph', $modules)) {
    $config->set('tags.og_site_name', '[site:name]');
    $config->set('tags.og_image', '[node:field_thumbnail]');
    $config->set('tags.og_image_url', '[node:field_thumbnail:entity:url]');
    $config->set('tags.og_title', '[node:title]');
    $config->set('tags.og_type', '[node:content-type]');
    $config->set('tags.og_url', '[node:url]');
    $config->set('tags.og_description', '[node:field_summary]');
    $config->set('tags.og_determiner', '[site:name]');
  }
  $config->save();

}


